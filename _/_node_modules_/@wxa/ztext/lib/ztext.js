require("../../../../../common.js");

var webpackJsonp = wx.webpackJsonp;

webpackJsonp([ 0 ], {
    84: function(t, r, e) {
        e(85);
    },
    85: function(t, r, e) {
        "use strict";
        var n = a(e(8)), o = a(e(86));
        function a(t) {
            return t && t.__esModule ? t : {
                default: t
            };
        }
        var u = {
            codeblock: {
                name: "div",
                attrs: {
                    class: /\bhighlight\b/
                }
            },
            video: {
                name: "a",
                attrs: {
                    class: /\bvideo-box\b/
                }
            },
            gif: {
                name: "div",
                attrs: {
                    class: "figure"
                },
                children: [ {
                    name: "img",
                    attrs: {
                        "data-actualsrc": /\.gif$/
                    }
                } ]
            },
            image: {
                name: "div",
                attrs: {
                    class: "figure"
                }
            }
        };
        Component({
            properties: {
                tree: Array,
                html: String,
                useFullscreenVideo: Boolean
            },
            attached: function() {
                var t = this.data, r = t.html, e = t.tree;
                if (!r && e.length) {
                    var a = (0, o.default)((0, n.default)(e), u), i = function(t) {
                        var r, e = [], n = !0, o = !1, a = void 0;
                        try {
                            for (var u, i = t[Symbol.iterator](); !(n = (u = i.next()).done); n = !0) {
                                var l = u.value, f = l.type, c = l.node;
                                "image" === f && e.push((r = c.children.find(function(t) {
                                    return "img" === t.name;
                                })).attrs && r.attrs.src);
                            }
                        } catch (t) {
                            o = !0, a = t;
                        } finally {
                            try {
                                n || null == i.return || i.return();
                            } finally {
                                if (o) throw a;
                            }
                        }
                        return e.filter(Boolean);
                    }(a);
                    this.setData({
                        list: a,
                        previewUrls: i
                    });
                }
            }
        });
    },
    86: function(t, r, e) {
        "use strict";
        Object.defineProperty(r, "__esModule", {
            value: !0
        }), r.default = void 0;
        var n, o = (n = e(87)) && n.__esModule ? n : {
            default: n
        };
        function a(t, r) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return function(t, r) {
                var e = [], n = !0, o = !1, a = void 0;
                try {
                    for (var u, i = t[Symbol.iterator](); !(n = (u = i.next()).done) && (e.push(u.value), 
                    !r || e.length !== r); n = !0) ;
                } catch (t) {
                    o = !0, a = t;
                } finally {
                    try {
                        n || null == i.return || i.return();
                    } finally {
                        if (o) throw a;
                    }
                }
                return e;
            }(t, r);
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
        var u = function(t, r) {
            var e, n = (e = r, Object.keys(e).map(function(t) {
                return [ t, e[t] ];
            }));
            return t.reduce(function(t, r) {
                var e, u = t[t.length - 1], i = function(t) {
                    var r = !0, e = !1, u = void 0;
                    try {
                        for (var i, l = n[Symbol.iterator](); !(r = (i = l.next()).done); r = !0) {
                            var f = a(i.value, 2), c = f[0], s = f[1];
                            if ((0, o.default)(s, t)) return {
                                type: c,
                                node: t
                            };
                        }
                    } catch (t) {
                        e = !0, u = t;
                    } finally {
                        try {
                            r || null == l.return || l.return();
                        } finally {
                            if (e) throw u;
                        }
                    }
                    return {
                        type: null,
                        tree: [ t ]
                    };
                }(r);
                return u && null === u.type && null === i.type ? (e = u.tree).push.apply(e, function(t) {
                    if (Array.isArray(t)) {
                        for (var r = 0, e = new Array(t.length); r < t.length; r++) e[r] = t[r];
                        return e;
                    }
                    return Array.from(t);
                }(i.tree)) : t.push(i), t;
            }, []);
        };
        r.default = u;
    },
    87: function(t, r, e) {
        "use strict";
        function n(t) {
            return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(t) {
                return typeof t;
            } : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
            })(t);
        }
        Object.defineProperty(r, "__esModule", {
            value: !0
        }), r.default = void 0;
        var o = function t(r, e) {
            if (r instanceof RegExp) {
                if ("object" === n(e)) return !1;
                if ("string" == typeof e) return r.test(e);
            }
            return n(r) === n(e) && ("object" !== n(r) || null === r ? r === e : Array.isArray(r) ? r.every(function(r) {
                return [].some.call(e, function(e) {
                    return t(r, e);
                });
            }) : Object.keys(r).every(function(o) {
                var a = e[o], u = r[o];
                return "object" === n(u) && null !== u && null !== a ? t(u, a) : "boolean" == typeof u ? u !== (null == a) : a === u;
            }));
        };
        r.default = o;
    }
}, [ 84 ]);